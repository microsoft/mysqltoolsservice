# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-18.04'
      buildScript: 'scripts/build-linux.sh'
      archiveFileName: 'mysqltoolsservice-linux-x64.tar.gz'
      archiveType: 'tar'
    ubuntu22:
      imageName: 'ubuntu-22.04'
      buildScript: 'scripts/build-linux.sh'
      archiveFileName: 'mysqltoolsservice-ubuntu22-x64.tar.gz'
      archiveType: 'tar'
    mac:
      imageName: 'macOS-latest'
      buildScript: 'scripts/build-mac.sh'
      archiveFileName: 'mysqltoolsservice-osx.tar.gz'
      archiveType: 'tar'
    windows:
      imageName: 'windows-latest'
      buildScript: 'scripts/build.sh'
      archiveFileName: 'mysqltoolsservice-win-x64.zip'
      archiveType: 'zip'

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.10'
- task: Bash@3
  inputs:
    filePath: $(buildScript)
    arguments: $(buildScriptArgs)
- task: EsrpCodeSigning@2
  inputs:
    ConnectedServiceName: 'OrcaSQL ESRP Code Sign'
    FolderPath: '$(Build.SourcesDirectory)\build\mysqltoolsservice'
    Pattern: '*.dll,*.exe'
    signConfigType: 'inlineSignParams'
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)\build\mysqltoolsservice'
    includeRootFolder: true
    archiveType: '$(archiveType)'
    archiveFile: '$(Build.SourcesDirectory)\build\$(archiveFileName)'
    replaceExistingArchive: true
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'build\$(archiveFileName)'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: build