trigger: none
pr: none
strategy:
  matrix:
    linux:
      imageName: 'ubuntu-18.04'
      buildScript: 'scripts/build-linux.sh'
      archiveFileName: 'mysqltoolsservice-linux-x64.tar.gz'
      archiveType: 'tar'
    ubuntu22:
      imageName: 'ubuntu-22.04'
      buildScript: 'scripts/build-linux.sh'
      archiveFileName: 'mysqltoolsservice-ubuntu22-x64.tar.gz'
      archiveType: 'tar'
    mac-x64:
      imageName: 'macOS-latest'
      buildScript: 'scripts/build-mac.sh'
      archiveFileName: 'mysqltoolsservice-osx.tar.gz'
      archiveType: 'tar'
    windows:
      imageName: 'windows-latest'
      buildScript: 'scripts/build.sh'
      archiveFileName: 'mysqltoolsservice-win-x64.zip'
      archiveType: 'zip'
    mac-arm64:
      imageName: 'macOS-latest'
      archiveFileName: 'mysqltoolsservice-osx-arm64.tar.gz'
      archiveType: 'tar'
pool:
  vmImage: $(imageName)
steps:
- task: UsePythonVersion@0
  condition: ne(variables['archiveFileName'], 'mysqltoolsservice-osx-arm64.tar.gz')
  inputs:
    versionSpec: '3.10'
- task: Bash@3
  condition: ne(variables['archiveFileName'], 'mysqltoolsservice-osx-arm64.tar.gz')
  inputs:
    filePath: $(buildScript)
    arguments: $(buildScriptArgs)
- task: UniversalPackages@0
  displayName: 'Download osx-arm64 package'
  condition: eq(variables['archiveFileName'], 'mysqltoolsservice-osx-arm64.tar.gz')
  inputs:
    command: download
    vstsFeed: 'Database Systems/azuredatastudio-mysql'
    vstsFeedPackage: 'mysqltoolsservice-osx-arm64'
    vstsPackageVersion: '0.0.1'
    downloadDirectory: '$(Build.SourcesDirectory)' 
- task: ExtractFiles@1
  condition: eq(variables['archiveFileName'], 'mysqltoolsservice-osx-arm64.tar.gz')
  inputs:
    archiveFilePatterns: '**/*.tar.gz'
    destinationFolder: $(Build.SourcesDirectory)/build
- template: templates/code-signing.yml
- task: DeleteFiles@1
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/build/mysqltoolsservice'
    Contents: 'CodeSignSummary*.md'
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/build/mysqltoolsservice'
    includeRootFolder: true
    archiveType: '$(archiveType)'
    archiveFile: '$(Build.SourcesDirectory)/build/$(archiveFileName)'
    replaceExistingArchive: true
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'build/$(archiveFileName)'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: build